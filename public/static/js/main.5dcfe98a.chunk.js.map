{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","router/PublicRoute.js","router/PrivateRoute.js","helpers/calendar-messages-es.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","hooks/useForm.js","components/auth/LoginScreen.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","uiOpenModal","uiCloseModal","eventSetActive","eventLogout","evetStartAddNew","eventAddNew","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","authCheckingFinish","authStartLogin","authLogin","authStartRegister","authStartStartTokenRenew","authLogout","initialState","modalOpen","events","activeEvent","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","eventLodaded","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","noTokenFetch","endpoint","data","method","url","fetch","headers","body","JSON","stringify","tokenFetch","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","event","checkingFinish","login","user","startLogout","dispatch","clear","logout","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","Navbar","useDispatch","name","useSelector","className","onClick","CalendarEvent","title","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus","clone","initEvent","notes","CalendarModal","useState","dateStart","setDateStart","dateEnd","setDateEnd","validTitle","setValidTitle","formValues","setFormValues","useEffect","handleInputChange","target","value","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","onSubmit","preventDefault","momentStart","momentEnd","isSameOrAfter","Swal","fire","trim","length","a","resp","json","ok","msg","console","log","getState","uid","_id","eventStartAddNew","onChange","minDate","placeholder","autoComplete","rows","AddNewFab","size","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onSelectSlot","selectable","onView","setItem","view","components","useForm","values","setValues","reset","LoginScreen","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","email","password","Date","getTime","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5dcfe98a.chunk.js","sourcesContent":["export const types = {\n  uiOpenModal: '[ui] Open modal',\n  uiCloseModal: '[ui] Close modal',\n\n  eventSetActive: '[event] Set Active',\n  eventLogout: '[event] Logout event',\n\n  evetStartAddNew: '[event] Start add new',\n  eventAddNew: '[event] Add new',\n  eventClearActiveEvent: '[event] Clear active event',\n  eventUpdated: '[event] Event updated',\n  eventDeleted: '[event] Event deleted',\n  eventLoaded: '[event] Events loaded',\n\n  authCheckingFinish: '[auth] Finish checking login state',\n  authStartLogin: '[auth] Start login',\n  authLogin: '[auth] Login',\n  authStartRegister: '[auth] Start Register',\n  authStartStartTokenRenew: '[auth] Start token renew',\n  authLogout: '[auth] Logout',\n}\n","import { types } from '../types/types'\n\nconst initialState = {\n  modalOpen: false,\n}\n\nexport const uiReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.uiOpenModal:\n      return {\n        ...state,\n        modalOpen: true,\n      }\n\n    case types.uiCloseModal:\n      return {\n        ...state,\n        modalOpen: false,\n      }\n\n    default:\n      return state\n  }\n}\n","import { types } from '../types/types'\n\nconst initialState = {\n  events: [],\n  activeEvent: null,\n}\n\nexport const calendarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.eventSetActive:\n      return {\n        ...state,\n        activeEvent: action.payload,\n      }\n\n    case types.eventAddNew:\n      return {\n        ...state,\n        events: [...state.events, action.payload],\n      }\n\n    case types.eventClearActiveEvent:\n      return {\n        ...state,\n        activeEvent: null,\n      }\n\n    case types.eventUpdated:\n      return {\n        ...state,\n        events: state.events.map((e) =>\n          e.id === action.payload.id ? action.payload : e\n        ),\n      }\n\n    case types.eventDeleted:\n      return {\n        ...state,\n        events: state.events.filter((e) => e.id !== state.activeEvent.id),\n        activeEvent: null,\n      }\n\n    case types.eventLodaded:\n      return {\n        ...state,\n        events: [...action.payload],\n      }\n\n    case types.eventLogout:\n      return {\n        ...initialState,\n      }\n\n    default:\n      return state\n  }\n}\n","import { types } from '../types/types'\n\nconst initialState = {\n  checking: true,\n  // uid: null,\n  // name: null\n}\n\nexport const authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.authLogin:\n      return {\n        ...state,\n        ...action.payload,\n        checking: false,\n      }\n\n    case types.authCheckingFinish:\n      return {\n        ...state,\n        checking: false,\n      }\n\n    case types.authLogout:\n      return {\n        checking: false,\n      }\n\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\n\nimport { uiReducer } from './uiReducer'\nimport { calendarReducer } from './calendarReducer'\nimport { authReducer } from './authReducer'\n\nexport const rootReducer = combineReducers({\n  ui: uiReducer,\n  calendar: calendarReducer,\n  auth: authReducer,\n})\n","import { createStore, compose, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport { rootReducer } from '../reducers/rootReducer'\n\nconst composeEnhancers =\n  (typeof window !== 'undefined' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n)\n","const baseUrl = process.env.REACT_APP_API_URL\n\nconst noTokenFetch = (endpoint, data, method = 'GET') => {\n  const url = `${baseUrl}/${endpoint}`\n\n  if ( method === 'GET' ) {\n    return fetch( url );\n} else {\n    return fetch( url, {\n        method,\n        headers: {\n            'Content-type': 'application/json'\n        },\n        body: JSON.stringify( data )\n    });\n}\n}\n\nconst tokenFetch = (endpoint, data, method = 'GET') => {\n  const url = `${baseUrl}/${endpoint}`\n  const token = localStorage.getItem('token') || ''\n\n  if ( method === 'GET' ) {\n    return fetch( url, {\n        method,\n        headers: {\n            'x-token': token\n        }\n    });\n} else {\n    return fetch( url, {\n        method,\n        headers: {\n            'Content-type': 'application/json',\n            'x-token': token\n        },\n        body: JSON.stringify( data )\n    });\n}\n}\n\nexport { noTokenFetch, tokenFetch }\n","import moment from 'moment'\n\nexport const prepareEvents = (events = []) => {\n  return events.map((e) => ({\n    ...e,\n    end: moment(e.end).toDate,\n    start: moment(e.start).toDate,\n  }))\n}\n","import Swal from 'sweetalert2'\n\nimport { types } from '../types/types'\nimport { tokenFetch } from '../helpers/fetch'\nimport { prepareEvents } from '../helpers/prepareEvents'\n\n\nexport const eventStartAddNew = (event) => {\n  return async (dispatch, getState) => {\n    const { uid, name } = getState\n\n    try {\n      const resp = await tokenFetch('events', event, 'POST')\n      const body = await resp.json()\n\n      if (body.ok) {\n        event.id = body.event.id\n        event.user = {\n          _id: uid,\n          name: name,\n        }\n\n        dispatch(eventAddNew(event))\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\nconst eventAddNew = (event) => ({\n  type: types.eventAddNew,\n  payload: event,\n})\n\nexport const eventSetActive = (event) => ({\n  type: types.eventSetActive,\n  payload: event,\n})\n\nexport const eventClearActiveEvent = () => ({\n  type: types.eventClearActiveEvent,\n})\n\nexport const eventStartUpdated = (event) => {\n  return async (dispatch) => {\n    try {\n      const resp = await tokenFetch(`events/${event.id}`, event, 'PUT')\n      const body = await resp.json()\n\n      if (body.ok) {\n        dispatch(eventUpdated(event))\n      } else {\n        Swal.fire('Error', body.msg, 'error')\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\nconst eventUpdated = (event) => ({\n  type: types.eventUpdated,\n  payload: event,\n})\n\nexport const eventStartDeleted = () => {\n  return async (dispatch, getState) => {\n    const { id } = getState().calendar.activeEvent\n\n    try {\n      const resp = await tokenFetch(`events/${id}`, {}, 'DELETE')\n      const body = await resp.json()\n\n      if (body.ok) {\n        dispatch(eventDeleted())\n      } else {\n        Swal.fire('Error', body.msg, 'error')\n      }\n    } catch (error) {\n      console.log(error)\n      Swal.fire('Error', error, 'error')\n    }\n  }\n}\n\nconst eventDeleted = (event) => ({\n  type: types.eventDeleted,\n  payload: event,\n})\n\nexport const eventStartLoading = () => {\n  return async (dispatch) => {\n    try {\n      const resp = await tokenFetch('events')\n      const body = await resp.json()\n\n      const events = prepareEvents(body.events)\n      dispatch(eventLoaded(events))\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\nconst eventLoaded = (events) => ({\n  type: types.eventLoaded,\n  payload: events,\n})\n\nexport const eventLogout = () => ({\n  type: types.eventLogout,\n})\n","import { noTokenFetch, tokenFetch } from '../helpers/fetch'\nimport { types } from '../types/types'\nimport Swal from 'sweetalert2'\nimport { eventLogout } from './events'\n\nexport const startLogin = (email, password) => {\n  return async (dispatch) => {\n    \n    const resp = await noTokenFetch('auth', { email, password }, 'POST')\n    const body = await resp.json()\n\n    if (body.ok) {\n      localStorage.setItem('token', body.token)\n      localStorage.setItem('token-init-date', new Date().getTime())\n\n      dispatch(\n        login({\n          uid: body.uid,\n          name: body.name,\n        })\n      )\n    } else {\n      Swal.fire('Error', body.msg, 'error')\n    }\n  }\n}\n\nexport const startRegister = (email, password, name) => {\n  return async (dispatch) => {\n    const resp = await noTokenFetch(\n      'auth/new',\n      { email, password, name },\n      'POST'\n    )\n    const body = await resp.json()\n\n    if (body.ok) {\n      localStorage.setItem('token', body.token)\n      localStorage.setItem('token-init-date', new Date().getTime())\n\n      dispatch(\n        login({\n          uid: body.uid,\n          name: body.name,\n        })\n      )\n    } else {\n      Swal.fire('Error', body.msg, 'error')\n    }\n  }\n}\n\nexport const startChecking = () => {\n  return async (dispatch) => {\n    const resp = await tokenFetch('auth/renew')\n    const body = await resp.json()\n\n    if (body.ok) {\n      localStorage.setItem('token', body.token)\n      localStorage.setItem('token-init-date', new Date().getTime())\n\n      dispatch(\n        login({\n          uid: body.uid,\n          name: body.name,\n        })\n      )\n    } else {\n      dispatch(checkingFinish())\n    }\n  }\n}\n\nconst checkingFinish = () => ({ type: types.authCheckingFinish })\n\nconst login = (user) => ({\n  type: types.authLogin,\n  payload: user,\n})\n\nexport const startLogout = () => {\n  return (dispatch) => {\n    localStorage.clear()\n    dispatch(eventLogout())\n    dispatch(logout())\n  }\n}\n\nconst logout = () => ({ type: types.authLogout })\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Route, Redirect } from 'react-router-dom'\n\nexport default function PublicRoute({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) {\n  return (\n    <Route\n      {...rest}\n      component={(props) => (\n        isAuthenticated ? <Redirect to=\"/\" /> : <Component {...props} />\n      )}\n    />\n  )\n}\n\nPublicRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Route, Redirect } from 'react-router-dom'\n\nexport default function PrivateRoute({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) {\n  return (\n    <Route\n      {...rest}\n      component={(props) => (\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\n      )}\n    />\n  )\n}\n\nPrivateRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n}\n","export const messages = {\n  allDay: 'Todo el día',\n  previous: '<',\n  next: '>',\n  today: 'Hoy',\n  month: 'Mes',\n  week: 'Semana',\n  day: 'Día',\n  agenda: 'Agenda',\n  date: 'Fecha',\n  time: 'Hora',\n  event: 'Evento',\n  noEventsInRange: 'No hay eventos en este rango',\n  showMore: (total) => `+ Ver más (${total})`,\n}\n","import React from 'react'\nimport { FiLogOut } from 'react-icons/all'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { startLogout } from '../../actions/auth'\n\nexport default function Navbar() {\n  const dispatch = useDispatch()\n  const { name } = useSelector((state) => state.auth)\n\n  const handleLogout = () => {\n    dispatch( startLogout() );\n}\n\n  return (\n    <div className=\"navbar navbar-dark bg-dark mb-4\">\n      <span className=\"navbar-brand\">{name}</span>\n\n      <button className=\"btn btn-outline-light\" onClick={handleLogout}>\n        <FiLogOut className=\"mr-2 mb-1\" />\n        <span>Salir</span>\n      </button>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function CalendarEvent({ event }) {\n  const { title, user } = event\n  return (\n    <div>\n      <span>\n        <strong>{title}</strong>\n      </span>{' '}\n      -\n      {' '}\n      <span>\n        <strong>{user.name}</strong>\n      </span>\n    </div>\n  )\n}\n","import { types } from '../types/types'\n\nexport const uiOpenModal = () => ({\n  type: types.uiOpenModal,\n})\n\nexport const uiCloseModal = () => ({\n  type: types.uiCloseModal,\n})\n","import React, { useState, useEffect } from 'react'\nimport Modal from 'react-modal'\nimport { FiSave } from 'react-icons/all'\nimport DateTimePicker from 'react-datetime-picker'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { uiCloseModal } from '../../actions/ui'\n\nimport './modal.css'\nimport {\n  eventClearActiveEvent,\n  eventStartAddNew,\n  eventStartUpdated,\n} from '../../actions/events'\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n}\n\nModal.setAppElement('#root')\n\nconst now = moment().minutes(0).seconds(0).add(1, 'hours')\nconst nowPlus = now.clone().add(1, 'hours')\n\nconst initEvent = {\n  title: 'Evento',\n  notes: '',\n  start: now.toDate(),\n  end: nowPlus.toDate(),\n}\n\nexport default function CalendarModal() {\n  const [dateStart, setDateStart] = useState(now.toDate())\n  const [dateEnd, setDateEnd] = useState(nowPlus.toDate())\n  const [validTitle, setValidTitle] = useState(true)\n\n  const [formValues, setFormValues] = useState(initEvent)\n\n  const dispatch = useDispatch()\n  const { modalOpen } = useSelector((state) => state.ui)\n  const { activeEvent } = useSelector((state) => state.calendar)\n\n  const { notes, title, start, end } = formValues\n\n  useEffect(() => {\n    if (activeEvent) {\n      setFormValues(activeEvent)\n    } else {\n      setFormValues(initEvent)\n    }\n  }, [activeEvent, setFormValues])\n\n  const handleInputChange = ({ target }) => {\n    setFormValues({\n      ...formValues,\n      [target.name]: target.value,\n    })\n  }\n\n  const closeModal = () => {\n    dispatch(uiCloseModal())\n    dispatch(eventClearActiveEvent())\n    setFormValues(initEvent)\n  }\n\n  const handleStartDateChange = (e) => {\n    setDateStart(e)\n    setFormValues({\n      ...formValues,\n      start: e,\n    })\n  }\n\n  const handleEndDateChange = (e) => {\n    setDateEnd(e)\n    setFormValues({\n      ...formValues,\n      end: e,\n    })\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    const momentStart = moment(start)\n    const momentEnd = moment(end)\n\n    if (momentStart.isSameOrAfter(momentEnd)) {\n      return Swal.fire(\n        'Error',\n        'Date should be different than the start date',\n        'error'\n      )\n    }\n\n    if (title.trim().length < 2) {\n      return setValidTitle(false)\n    }\n\n    if (activeEvent) {\n      dispatch(eventStartUpdated(formValues))\n    } else {\n      dispatch(eventStartAddNew(formValues))\n    }\n\n    setValidTitle(true)\n    closeModal()\n  }\n\n  return (\n    <Modal\n      isOpen={modalOpen}\n      // onAfterOpen={afterOpenModal}\n      onRequestClose={closeModal}\n      style={customStyles}\n      closeTimeoutMS={200}\n      className=\"modal\"\n      overlayClassName=\"modal-fondo\"\n    >\n      <h1> {activeEvent ? 'Editar evento' : 'Nuevo evento'} </h1>\n      <hr />\n      <form className=\"container\" onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label>Fecha y hora inicio</label>\n          <DateTimePicker\n            onChange={handleStartDateChange}\n            value={dateStart}\n            className=\"form-control\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Fecha y hora fin</label>\n          <DateTimePicker\n            onChange={handleEndDateChange}\n            minDate={dateStart}\n            value={dateEnd}\n            className=\"form-control\"\n          />\n        </div>\n\n        <hr />\n        <div className=\"form-group\">\n          <label>Titulo y notas</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Título del evento\"\n            name=\"title\"\n            autoComplete=\"off\"\n            value={title}\n            onChange={handleInputChange}\n          />\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\n            Una descripción corta\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <textarea\n            type=\"text\"\n            className={`form-control ${!validTitle && 'is-invalid'}`}\n            placeholder=\"Notas\"\n            rows=\"5\"\n            name=\"notes\"\n            value={notes}\n            onChange={handleInputChange}\n          ></textarea>\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\n            Información adicional\n          </small>\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-outline-primary btn-block\">\n          <FiSave />\n          <span> Guardar</span>\n        </button>\n      </form>\n    </Modal>\n  )\n}\n","import React from 'react'\nimport { FiPlus } from 'react-icons/fi'\nimport { useDispatch } from 'react-redux'\nimport { uiOpenModal } from '../../actions/ui'\n\nexport default function AddNewFab() {\n  const dispatch = useDispatch()\n\n  const handleClickNew = () => {\n    dispatch(uiOpenModal())\n  }\n\n  return (\n    <button className=\"btn btn-dark fab\" onClick={handleClickNew}>\n      <FiPlus size=\"50px\" />\n    </button>\n  )\n}\n","import React from 'react'\nimport { FiTrash } from 'react-icons/all'\nimport { useDispatch } from 'react-redux'\nimport { eventStartDeleted } from '../../actions/events'\n\nexport default function DeleteEventFab() {\n  const dispatch = useDispatch()\n\n  const handleDelete = () => {\n    dispatch(eventStartDeleted())\n  }\n\n  return (\n    <button className=\"btn btn-danger fab-danger\" onClick={handleDelete}>\n      <FiTrash className=\"mb-1 mr-2\" />\n      <span>Borrar evento</span>\n    </button>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport moment from 'moment'\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\nimport 'moment/locale/es'\nimport { messages } from '../../helpers/calendar-messages-es'\n\nimport Navbar from '../ui/Navbar'\nimport CalendarEvent from './CalendarEvent'\nimport CalendarModal from './CalendarModal'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { uiOpenModal } from '../../actions/ui'\nimport {\n  eventSetActive,\n  eventClearActiveEvent,\n  eventStartLoading,\n} from '../../actions/events'\nimport AddNewFab from '../ui/AddNewFab'\nimport DeleteEventFab from '../ui/DeleteEventFab'\n\nmoment.locale('es')\n\nconst localizer = momentLocalizer(moment)\n\nexport default function CalendarScreen() {\n  const dispatch = useDispatch()\n   \n  const { events, activeEvent } = useSelector((state) => state.calendar)\n  const { uid } = useSelector((state) => state.auth)\n\n  const [lastView, setLastView] = useState(\n    localStorage.getItem('lastView') || 'month'\n  )\n\n\n  useEffect(() => {\n    dispatch(eventStartLoading())\n  }, [dispatch])\n\n  const onDoubleClick = (e) => {\n    dispatch(uiOpenModal())\n  }\n\n  const onSelectEvent = (e) => {\n    dispatch(eventSetActive(e))\n  }\n\n  const onSelectSlot = (e) => {\n    dispatch(eventClearActiveEvent())\n  }\n\n  const onViewChange = (e) => {\n    setLastView(e)\n    localStorage.setItem('lastView', e)\n  }\n\n  const eventStyleGetter = (event, start, end, isSelected) => {\n    const style = {\n      backgroundColor: uid === event.user._id ? '#367CF7' : '#465660',\n      borderRadius: '0px',\n      opacity: 0.8,\n      display: 'block',\n      color: 'white',\n    }\n\n    return {\n      style,\n    }\n  }\n  return (\n    <div className=\"calendar-screen\">\n      <Navbar />\n\n      <Calendar\n        localizer={localizer}\n        events={events}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        messages={messages}\n        eventPropGetter={eventStyleGetter}\n        onDoubleClickEvent={onDoubleClick}\n        onSelectEvent={onSelectEvent}\n        onSelectSlot={onSelectSlot}\n        selectable={true}\n        onView={onViewChange}\n        view={lastView}\n        components={{\n          event: CalendarEvent,\n        }}\n      />\n\n      <AddNewFab />\n\n      {activeEvent && <DeleteEventFab />}\n      <CalendarModal />\n    </div>\n  )\n}\n","import { useState } from 'react'\n\nexport const useForm = (initialState = {}) => {\n  const [values, setValues] = useState(initialState)\n\n  const reset = () => {\n    setValues(initialState)\n  }\n\n  const handleInputChange = ({ target }) => {\n    setValues({\n      ...values,\n      [target.name]: target.value,\n    })\n  }\n\n  return [values, handleInputChange, reset]\n}\n","import React from 'react'\nimport Swal from 'sweetalert2'\nimport { useDispatch } from 'react-redux'\nimport { useForm } from '../../hooks/useForm'\nimport { startLogin, startRegister } from '../../actions/auth'\n\nimport './login.css'\n\nexport default function LoginScreen() {\n  const dispatch = useDispatch()\n  const [formLoginValues, handleLoginInputChange] = useForm({\n    lEmail: 'alvaro@bluecatencode.com',\n    lPassword: '123456',\n  })\n\n  const [formRegisterValues, handleRegisterInputChange] = useForm({\n    rName: 'Eva',\n    rEmail: 'eva@bluecatencode.com',\n    rPassword1: '123456',\n    rPassword2: '123456',\n  })\n\n  const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues\n\n\n\n  const { lEmail, lPassword } = formLoginValues\n\n  const handleLogin = (e) => {\n    e.preventDefault()\n    dispatch(startLogin(lEmail, lPassword))\n  }\n\n  const handleRegister = (e) => {\n    e.preventDefault()\n    if (rPassword1 !== rPassword2) {\n      return Swal.fire('Error', 'Password should match', 'error')\n    }\n    dispatch(startRegister(rEmail, rPassword1, rName))\n  }\n\n  return (\n    <div className=\"container login-container\">\n      <div className=\"row\">\n        <div className=\"col-md-6 login-form-1\">\n          <h3>Ingreso</h3>\n          <form onSubmit={handleLogin}>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Correo\"\n                name=\"lEmail\"\n                value={lEmail}\n                onChange={handleLoginInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Contraseña\"\n                name=\"lPassword\"\n                value={lPassword}\n                onChange={handleLoginInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Login\" />\n            </div>\n          </form>\n        </div>\n\n        <div className=\"col-md-6 login-form-2\">\n          <h3>Registro</h3>\n          <form onSubmit={handleRegister}>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Nombre\"\n                value={rName}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                placeholder=\"Correo\"\n                value={rEmail}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Contraseña\"\n                value={rPassword1}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Repita la contraseña\"\n                value={rPassword2}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Crear cuenta\" />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startChecking } from '../actions/auth'\nimport PublicRoute from './PublicRoute'\nimport PrivateRoute from './PrivateRoute'\n\nimport CalendarScreen from '../components/calendar/CalendarScreen'\nimport LoginScreen from '../components/auth/LoginScreen'\n\nexport default function AppRouter() {\n  const dispatch = useDispatch()\n  const { checking, uid } = useSelector((state) => state.auth)\n\n  useEffect(() => {\n    dispatch(startChecking())\n  }, [dispatch])\n\n  if (checking) {\n    return <h5>Espere....</h5>\n  }\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <PublicRoute\n            exact\n            path=\"/login\"\n            component={LoginScreen}\n            isAuthenticated={!!uid}\n          />\n\n          <PrivateRoute\n            exact\n            path=\"/\"\n            component={CalendarScreen}\n            isAuthenticated={!!uid}\n          />\n\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { store } from './store/store'\n\nimport AppRouter from './router/AppRouter'\n\nexport default function CalendarApp() {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport CalendarApp from './CalendarApp'\nimport './styles.css'\n\nReactDOM.render(<CalendarApp />, document.getElementById('root'))\n"],"sourceRoot":""}